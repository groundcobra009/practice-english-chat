\[推論]
ユーザー入力「GeminiのようなチャットUIで英語学習を行えるシステム。AIからメッセージが来た後に、ユーザーが学びたい内容を送ると3つのメッセージが別々の吹き出しで返る。吹き出しには音声アイコンとブックマークアイコン。音声で発音再生、ブックマークで保存・削除は確認モーダルあり。」から、目的は「対話型で英語表現を効率学習し、必要表現を音声と共に蓄積できること」。MVPでは(1)チャット体験、(2)3件の学習メッセージ生成、(3)TTSによる発音再生、(4)ブックマーク保存/一覧/削除(確認付き)、(5)最低限のアカウント・データ永続化が中核。UIはモバイル優先のWebで実装し、LLMとTTSはマネージドAPIを利用。最短で価値検証するため、文法診断や長期カリキュラムは後回し。

\[要件定義書]

1. 背景・目的

* 対話型AIを用いて、ユーザーが「今学びたい英語表現」を素早く入手し、発音を確認しながら反復できる学習体験を提供する
* 必要表現をブックマークで蓄積し、再学習を容易にする

2. ユースケース / 想定ユーザー

* 例文や言い回しをすぐ知りたい英語学習者（初級〜中級、社会人/学生）
* 通勤・隙間時間でモバイル中心に学習するユーザー
* スピーキングやリスニングの即時練習をしたいユーザー

3. 機能要件（MVP）

* チャットUI

  * 初回AIメッセージ（使い方案内）
  * ユーザーが学びたいトピック/日本語指示/英語キーワードを送信
  * 送信後、AIが3件の学習メッセージ（別々の吹き出し）を自動生成
  * 吹き出し内要素：例文/訳（任意）/簡単な解説（短文）
  * 吹き出し右上：音声アイコン、ブックマークアイコン
* 音声再生（TTS）

  * 吹き出しの英語文をネイティブ音声で再生
  * 再生/一時停止、再生中インジケータ
* ブックマーク

  * 吹き出しからワンタップ保存/解除
  * 解除時は確認モーダル（「削除しますか？」Yes/No）
  * ブックマーク一覧画面：保存日時順/検索（英語文テキスト）
  * 一覧からの再生・削除（削除は確認モーダル）
* セッション管理・保存

  * 最低限のユーザ登録/ログイン（Email+Password または匿名+端末ローカル→後で昇格）
  * チャット履歴の保存（直近セッション1つで可）
  * ブックマークの永続化（ユーザー毎）
* 生成制御

  * 3件生成のためのプロンプト制御（レベル指定：初級/中級の自動推定 or 手動切替）
  * 安全フィルタ（不適切表現を抑制）
* 基本設定

  * TTS音声の選択（男女/スピード±）
  * 表示言語：日本語UI（英語へ切替は任意）
* フィードバック

  * 吹き出しごとの「役に立った」簡易フィードバック（👍/👎）

4. 非機能要件

* パフォーマンス

  * 初回ロード < 3秒（4G回線想定）、TTS開始遅延 < 1.5秒、3件生成の合計応答 < 5秒目標
* 可用性・信頼性

  * サービス稼働率目標 99.5%（MVP）
  * 失敗時の再試行とユーザ通知（トースト）
* セキュリティ・プライバシー

  * 通信のHTTPS/TLS必須
  * ユーザデータはリージョン内保管（選定クラウド準拠）
  * 認証情報は安全保管（ハッシュ、JWTの短期有効+更新）
* データ保護

  * 削除要請に応じたブックマーク/履歴消去
  * LLMへの送信データ方針を明示（利用目的/保持期間）
* 対応環境

  * モバイルWeb（iOS/Androidの最新2世代）とPCブラウザ（Chrome/Edge/Safari）
  * スクリーンリーダー対応（ボタンにaria-label、キーボード操作）
* 運用・監視

  * 例外ログ、LLM/TTS呼び出し失敗率、応答時間をダッシュボード化
  * ベータ用フィードバックフォーム

5. 画面・UI要件（MVP）

* チャット画面

  * 上部ヘッダ（タイトル、ブックマーク一覧ボタン）
  * 吹き出し：3件を縦並び、各に音声・ブックマークアイコン
  * 入力エリア：テキスト、送信ボタン、レベル切替トグル
  * 読み上げ中のビジュアル（アイコン点滅/波形）
* ブックマーク一覧

  * カード/リスト表示：英語文、訳、再生、削除（ごみ箱）→削除確認モーダル
  * 検索バー、並び替え（保存順/最近再生）
* 確認モーダル

  * タイトル、対象文の冒頭表示、「削除」「キャンセル」

6. 技術スタック・アーキテクチャ

* フロントエンド
  * Next.js 14 (App Router)：React フレームワーク、SSR/SSG 対応
  * TypeScript：型安全な開発
  * Tailwind CSS：レスポンシブ UI
  * PWA 対応：モバイル体験向上
* バックエンド・インフラ
  * Vercel：ホスティング・デプロイメント、Edge Functions
  * Supabase：認証・データベース・リアルタイム機能
    * PostgreSQL：ユーザー/ブックマーク/履歴データ
    * Auth：Email/Password 認証、JWT ベース
    * Row Level Security：ユーザーデータ保護
* AI・音声処理
  * AI SDK (Vercel)：LLM API 統合（OpenAI/Anthropic）
  * Web Speech API：ブラウザ内 TTS（フォールバック）
  * ElevenLabs TTS API：高品質音声（メイン）
* 状態管理・UI
  * Zustand：軽量状態管理
  * React Hook Form：フォーム処理
  * Radix UI：アクセシブル UI コンポーネント
* 監視・分析
  * Vercel Analytics：パフォーマンス監視
  * Supabase Dashboard：DB 監視・ログ

7. アーキテクチャ詳細

* デプロイメント構成
  * Vercel Edge Network：グローバル CDN
  * Edge Functions：リアルタイム AI 応答
  * Supabase (AWS ap-northeast-1)：データ永続化
* 認証フロー
  * Supabase Auth → JWT → Row Level Security
  * 匿名ユーザー → 後で Email 昇格可能
* データフロー
  * ユーザー入力 → Edge Function → AI SDK → LLM API
  * 生成結果 → クライアント → Supabase (保存)
  * ブックマーク → Supabase RLS → ユーザー専用データ

8. API/外部サービス統合

* AI 推論
  * Vercel AI SDK 経由で OpenAI GPT-4 または Anthropic Claude
  * プロンプト管理：英語例文生成・解説特化
  * レート制限・コスト管理：Vercel 制限準拠
* 音声合成
  * ElevenLabs TTS API：ネイティブ品質音声（US/UK）
  * Web Speech API：ブラウザフォールバック
  * 音声キャッシュ：Vercel Blob Storage
* データベース
  * Supabase PostgreSQL：リレーショナルデータ
  * リアルタイム：ブックマーク同期（複数デバイス）
  * バックアップ：Supabase 自動バックアップ

9. データモデル（Supabase）

```sql
-- Users テーブル（Supabase Auth 連携）
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT auth.uid(),
  email TEXT UNIQUE,
  display_name TEXT,
  preferences JSONB DEFAULT '{}',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Sessions テーブル（チャット履歴管理）
CREATE TABLE sessions (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  title TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Messages テーブル（対話履歴）
CREATE TABLE messages (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  session_id UUID REFERENCES sessions(id) ON DELETE CASCADE,
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  role TEXT CHECK (role IN ('user', 'assistant')) NOT NULL,
  content TEXT NOT NULL,
  metadata JSONB DEFAULT '{}', -- 学習レベル、生成パラメータ等
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Bookmarks テーブル（学習素材保存）
CREATE TABLE bookmarks (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  message_id UUID REFERENCES messages(id) ON DELETE SET NULL,
  text_en TEXT NOT NULL,
  text_ja TEXT,
  notes TEXT,
  audio_url TEXT, -- ElevenLabs/キャッシュ音声URL
  play_count INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  last_played_at TIMESTAMP WITH TIME ZONE
);

-- RLS (Row Level Security) ポリシー
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE sessions ENABLE ROW LEVEL SECURITY;
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;
ALTER TABLE bookmarks ENABLE ROW LEVEL SECURITY;

-- ユーザーは自分のデータのみアクセス可能
CREATE POLICY "Users can access own data" ON users FOR ALL USING (auth.uid() = id);
CREATE POLICY "Users can access own sessions" ON sessions FOR ALL USING (auth.uid() = user_id);
CREATE POLICY "Users can access own messages" ON messages FOR ALL USING (auth.uid() = user_id);
CREATE POLICY "Users can access own bookmarks" ON bookmarks FOR ALL USING (auth.uid() = user_id);
```

10. 開発・デプロイメント環境

* 開発環境
  * Next.js Dev Server：ローカル開発
  * Supabase CLI：ローカル DB・認証エミュレート
  * pnpm：パッケージ管理
  * ESLint + Prettier：コード品質
  * Husky + lint-staged：pre-commit チェック
* ステージング
  * Vercel Preview：PR 毎の自動デプロイ
  * Supabase Staging：本番分離環境
  * Cypress：E2E テスト自動実行
* 本番環境
  * Vercel Production：独自ドメイン
  * Supabase Production：本番 DB
  * Vercel Analytics：リアルタイム監視
  * Sentry：エラー追跡
* CI/CD パイプライン
  * GitHub Actions：テスト・リント・型チェック
  * Vercel Git Integration：自動デプロイ
  * Database Migration：Supabase CLI 経由

11. パフォーマンス最適化

* フロントエンド
  * Next.js App Router：コンポーネント分割・遅延読み込み
  * SWR/React Query：データキャッシュ・同期
  * Bundle Analyzer：JS バンドルサイズ監視
  * Web Vitals：Core Web Vitals 測定
* API・データベース
  * Vercel Edge Functions：地理的分散
  * Supabase Connection Pooling：DB 接続効率化
  * Redis（Upstash）：頻繁アクセスデータキャッシュ
  * AI 応答ストリーミング：逐次表示でUX向上

12. セキュリティ実装

* 認証・認可
  * Supabase Auth：Email確認・パスワードリセット
  * JWT 自動更新：セッション管理
  * Rate Limiting：API 乱用防止（Vercel）
* データ保護
  * HTTPS 強制：Vercel 標準
  * RLS：データベースレベルアクセス制御
  * Input Sanitization：XSS 防止
  * AI プロンプト検証：インジェクション対策

13. プロジェクト構成・ファイル構造

```
practice-english-chat/
├── src/
│   ├── app/                    # Next.js App Router
│   │   ├── (auth)/            # 認証ページグループ
│   │   ├── chat/              # チャット画面
│   │   ├── bookmarks/         # ブックマーク一覧
│   │   ├── api/               # API Routes
│   │   │   ├── chat/          # AI チャット API
│   │   │   ├── tts/           # 音声合成 API
│   │   │   └── bookmarks/     # ブックマーク操作
│   │   ├── globals.css
│   │   ├── layout.tsx
│   │   └── page.tsx
│   ├── components/            # UI コンポーネント
│   │   ├── ui/               # 基本 UI (shadcn/ui)
│   │   ├── chat/             # チャット関連
│   │   ├── bookmark/         # ブックマーク関連
│   │   └── audio/            # 音声再生関連
│   ├── lib/                  # ユーティリティ
│   │   ├── supabase/         # Supabase クライアント
│   │   ├── ai/               # AI SDK 設定
│   │   ├── audio/            # TTS 統合
│   │   └── utils.ts
│   ├── types/                # TypeScript 型定義
│   ├── hooks/                # カスタムフック
│   └── store/                # Zustand ストア
├── supabase/                 # Supabase 設定
│   ├── migrations/           # DB マイグレーション
│   ├── seed.sql             # 初期データ
│   └── config.toml
├── public/                   # 静的ファイル
├── .env.local               # 環境変数
├── .env.example
├── next.config.js
├── tailwind.config.js
├── tsconfig.json
├── package.json
└── README.md
```

14. 環境変数・設定

```bash
# .env.local (本番では Vercel Environment Variables)
NEXT_PUBLIC_SUPABASE_URL=your_supabase_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key

# AI Provider (OpenAI または Anthropic)
OPENAI_API_KEY=your_openai_key
ANTHROPIC_API_KEY=your_anthropic_key

# TTS サービス
ELEVENLABS_API_KEY=your_elevenlabs_key

# 監視・分析
SENTRY_DSN=your_sentry_dsn
VERCEL_ANALYTICS_ID=your_analytics_id
```

15. 依存関係（主要パッケージ）

```json
{
  "dependencies": {
    "next": "^14.0.0",
    "react": "^18.0.0",
    "typescript": "^5.0.0",
    "@supabase/supabase-js": "^2.38.0",
    "@supabase/auth-helpers-nextjs": "^0.8.0",
    "ai": "^2.2.0",
    "@radix-ui/react-dialog": "^1.0.0",
    "@radix-ui/react-toast": "^1.1.0",
    "zustand": "^4.4.0",
    "react-hook-form": "^7.47.0",
    "tailwindcss": "^3.3.0",
    "lucide-react": "^0.290.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.0.0",
    "eslint": "^8.50.0",
    "prettier": "^3.0.0",
    "cypress": "^13.0.0",
    "husky": "^8.0.0",
    "lint-staged": "^15.0.0"
  }
}
```

16. スコープ外（将来拡張）

* 発話録音→発音評価、長期カリキュラム生成、復習スケジューラ（SRS）
* レベル自動判定の高精度化、画像入力、オフライン再生、ネイティブアプリ
* 教師ダッシュボード、多言語学習対応

17. 受け入れ条件（抜粋）

* ユーザーが任意のテーマを送信すると、3つの英語メッセージが別々の吹き出しで表示される
* 各吹き出しの音声アイコンで該当英語文が再生できる
* 各吹き出しのブックマークアイコンで保存でき、一覧で表示される
* ブックマーク削除時に確認モーダルが表示され、Yes選択で削除される
* モバイルブラウザで主要機能が快適に動作する
